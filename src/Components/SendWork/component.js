import style from "./style/style.module.css";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";

const useMousePosition = () => {
  const [mousePosition, setMousePosition] = useState({ x: null, y: null });

  const updateMousePosition = (e) => {
    setMousePosition({ x: e.clientX, y: e.clientY });
  };

  useEffect(() => {
    window.addEventListener("mousemove", updateMousePosition);

    return () => window.removeEventListener("mousemove", updateMousePosition);
  }, []);

  return mousePosition;
};

export const SendWork = () => {
  const [isHovered, setIsHovered] = useState(false);
  const { x, y } = useMousePosition();
  const size = isHovered ? 400 : 40;

  return (
    <main className={style.main}>
      <div className={style.text}>–ù–∞–≤–µ–¥–∏ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ç–∞–ø–Ω–∏ üëá</div>
      <motion.div
        className={style.mask}
        animate={{
          WebkitMaskPosition: `${x - size / 2}px ${y - size / 2}px`,
          WebkitMaskSize: `${size}px`,
        }}
        transition={{ type: "tween", ease: "backOut", duration: 0.5 }}
      >
        <p
          onMouseEnter={() => {
            setIsHovered(true);
          }}
          onMouseLeave={() => {
            setIsHovered(false);
          }}
        >
          Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - —Å –Ω–∞–≤—ã–∫–∞–º–∏, –≥–æ—Ç–æ–≤—ã–π –ø–∏—Å–∞—Ç—å —Å–ª–æ–∂–Ω—É—é –∞—Ä—Ö–∏—Ç–∏–∫—Ç—É—Ä—É,
          —Ä–µ—à–∞—è –ø—Ä–æ–±–ª–µ–º—ã –í–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –∑–∞ –í–∞—à–∏ –¥–µ–Ω—å–≥–∏ üí∏
        </p>
      </motion.div>

      <div className={style.body}>
        <p>
          –Ø <span>–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π</span> frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å —Å–∏–ª—å–Ω—ã–º
          –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –≤–ø–µ—á–∞—Ç–ª—è—é—â–µ–≥–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ
          –æ–ø—ã—Ç–∞
        </p>
      </div>
    </main>
  );
};
